project.ext {
    support = "1.0.0"
    constraintlayout = "2.0.0-alpha2"
    arch = "2.0.0-alpha1"
    retrofit = "2.0.2"
    constraintLayout = "1.0.2"
    dagger_version = "2.15"
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.0'
    defaultConfig {
        applicationId "com.example.ma.testapp"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true;
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:28.0.0'
    compile 'com.android.support:support-v4:28.0.0'
    compile 'com.android.support:recyclerview-v7:28.0.0'
    compile 'com.alibaba:fastjson:1.2.10'
//    testCompile 'junit:junit:4.12'
    compile 'com.android.support:design:28.+'
    //Glide
    compile 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    //okhttp
    compile 'com.squareup.okhttp3:okhttp:3.8.+'
    //butterknife
    compile 'com.jakewharton:butterknife:9.0.0-rc1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-rc1'
    //gson
    compile 'com.google.code.gson:gson:2.8.5'
    //EventBus
    compile 'org.greenrobot:eventbus:3.1.1'
    //----------for mvvm----------
    def lifecycle_version = "1.1.1"
    // ViewModel and LiveData
    compile "android.arch.lifecycle:extensions:$lifecycle_version"
    // alternatively - just ViewModel
//    compile "android.arch.lifecycle:viewmodel:$lifecycle_version" // use -ktx for Kotlin
    // alternatively - just LiveData
//    compile "android.arch.lifecycle:livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
    compile "android.arch.lifecycle:runtime:$lifecycle_version"

    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version" // use kapt for Kotlin
    // alternately - if using Java8, use the following instead of compiler
//    compile "android.arch.lifecycle:common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
//    compile "android.arch.lifecycle:reactivestreams:$lifecycle_version"
    // optional - Test helpers for LiveData
//    testImplementation "android.arch.core:core-testing:$lifecycle_version"

    // Retrofit
    compile "com.squareup.retrofit2:retrofit:$project.retrofit"
    compile "com.squareup.retrofit2:converter-gson:$project.retrofit"

    // Dagger
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    compile "com.google.dagger:dagger:$project.dagger_version"
    compile "com.google.dagger:dagger-android:$project.dagger_version"
    compile "com.google.dagger:dagger-android-support:$project.dagger_version"
    //----------end mvvm----------

}

